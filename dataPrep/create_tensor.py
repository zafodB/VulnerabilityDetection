import pandas as pd
import json
import sys
import numpy as np
import pandas as pd
import uuid

def load_strings(input_string):
    print(input_string[:500])

    sys.exit(0)

    return json.loads(input_string)

def load_data(data_location: str):
    df = pd.read_csv(filepath_or_buffer=data_location, delimiter=';', header=0)

    target = df.pop(item='encoded_target')

    df.pop(item='raw_text')
    df.pop(item='raw_target')

    # print(df.head(5))
    # print(df.dtypes)

    df['encoded_text_dict'] = df['encoded_text'].apply(lambda x: load_strings(x))

    for item in df['encoded_text_dict'].iteritems():
        print(type(item[1]))
        # print(len(item[1]))
    # dataset = tf.data.Dataset.from_tensor_slices((df.values, target.values))

    # for feat, targ in dataset.take(5):
    #     print('Features: {}, Target: {}'.format(feat, targ))

    # return dataset


# load_data('D:/Downloads/data/train_data1.csv')

float32_array = np.array(([[[0.51764709, 0.254, 0.24684, 0.88787, 0.549], [0.111, 0.112, 0.113, 0.114, 0.115]]]), np.float32)
# float32_array2 = np.array([0.1111, 0.2222, 0.3333, 0.4444], np.float32)
# print(float32_array.tolist())
# print(list(float32_array))
#
# file_id = str(uuid.uuid4())
#
# np.save(file=(file_id + '.npy'), arr=float32_array)

# embedded_text = np.empty(shape=0)
print(float32_array.shape)
# print(embedded_text)

embedded_text = np.vstack((float32_array, [np.zeros(shape=(2,5)) for _ in range(200)]))

print(embedded_text)
print(embedded_text.shape)

# df = pd.DataFrame(float32_array)

# print(df.iloc[0)

